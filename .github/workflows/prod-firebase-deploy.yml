name: Prod | Deploy to Firebase
'on':
  push:
    branches:
      - main
jobs:
  build:
    name: "Building App"
    environment: development
    runs-on: ubuntu-latest
    steps:
      # checking out repo
      - name: Checkout
        uses: actions/checkout@v3
        
      # creating env file
      - name: .env creation
        run: |
          touch .env.prod
          echo NX_ENVIRONMENT="production" >> .env.prod
          echo NX_FIREBASE_AUTH_DOMAIN='${{secrets.NX_FIREBASE_AUTH_DOMAIN}}' >> .env.prod
          echo NX_FIREBASE_DATABASE_URL='${{ secrets.NX_FIREBASE_DATABASE_URL }}' >> .env.prod.prod
          echo NX_FIREBASE_PROJECT_ID='${{secrets.NX_FIREBASE_PROJECT_ID}}' >> .env.prod
          echo NX_FIREBASE_STORAGE_BUCKET='${{secrets.NX_FIREABASE_STORAGE_BUCKET}}' >> .env.prod
          echo NX_FIREBASE_MESSAGING_SENDER_ID='${{ secrets.NX_FIREBASE_MESSAGING_SENDER_ID }}' >> .env.prod
          echo NX_FIREBASE_APP_ID='${{ secrets.NX_FIREBASE_APP_ID }}' >> .env.prod
          echo NX_FIREBASE_MEASUREMENT_ID='${{ secrets.NX_FIREBASE_MEASUREMENT_ID }}' >> .env.prod
          echo NX_FIREBASE_API_KEY='${{ secrets.NX_FIREBASE_API_KEY }}' >> .env.prod
          cat .env.prod
        
      # installing packages and building the app
      - name: Installing packages and buidling app
        run: yarn install --frozen-lockfile && yarn build:app:prod && yarn build:api:prod
        
      # Pushing to Firebase
      - name: Pushing to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_COS301_MINIPROJECT }}'
          projectId: 'cos301-miniproject'
          channelId: live
          
            # Deploying to firebase functions
      - name: Deploy
        run: npx firebase-tools@latest deploy --only functions --project cos301-miniproject --json
        env:
          GOOGLE_APPLICATION_CREDENTIALS: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_COS301_MINIPROJECT }}'
      # saving artifact for later use
#       - name: Make artifact
#         uses: actions/upload-artifact@v3
#         with:
#           name: dist-artifact
#           path: |
#             dist
#             firebase.json
#             firestore.indexes.json
#             firestore.rules
#             database.rules.json
#             .env.prod
#           retention-days: 1
      
      # saving firebase.json
        
#   deploy_app:
#     name: "Deploying App"
#     environment: production
#     needs: build
#     runs-on: ubuntu-latest
#     steps:
#       # checking out repo
#       - name: Checkout
#         uses: actions/checkout@v3
        
#       # Getting artifacts
#       - name: Getting artifacts
#         uses: actions/download-artifact@master
        
#       - name: CD
#         run: cd dist-artifact
          
#       - name: "Create firebasesc"
#         uses: "finnp/create-file-action@master"
#         env:
#           FILE_NAME: ".firebasesc"
#           FILE_DATA: "${{secrets.FIREBASESC}}"
      

    
#   deploy_functions:
#     name: "Deploying firebsae functions"
#     environment: production
#     needs: build
#     runs-on: ubuntu-latest
#     steps:
#       # checking out repo
#       - name: Checkout
#         uses: actions/checkout@v3
        
#       # Getting artifacts
#       - name: Getting artifacts
#         uses: actions/download-artifact@master
#         with:
#           name: dist-artifact
#           path: dist
      
#       - name: "Create firebasesc"
#         uses: "finnp/create-file-action@master"
#         env:
#           FILE_NAME: ".firebasesc"
#           FILE_DATA: "${{secrets.FIREBASESC}}"
          
#       - name: Deploy
#         run: npx firebase-tools deploy
#         env:
#           FIREBASE_TOKEN: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_COS301_MINIPROJECT }}
      
      # Deploying to firebase functions
#       - name: Push to Firebase Functions
#         uses: w9jds/firebase-action@master
#         with: 
#           args: deploy --only functions
#         env:
#           FIREBASE_TOKEN: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_COS301_MINIPROJECT }}'
